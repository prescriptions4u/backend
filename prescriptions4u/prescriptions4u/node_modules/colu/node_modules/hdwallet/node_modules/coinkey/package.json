{
  "name": "coinkey",
  "version": "1.4.0",
  "description": "JavaScript component for private keys, public keys, and addresess for crypto currencies such as Bitcoin, Litecoin, and Dogecoin",
  "keywords": [
    "cryptography",
    "crypto",
    "bitcoin",
    "litecoin",
    "elliptical",
    "curve"
  ],
  "devDependencies": {
    "browserify": "^5.12.1",
    "coininfo": "^0.3.1",
    "coveralls": "^2.10.0",
    "istanbul": "^0.2.10",
    "mocha": "~1.17.1",
    "mocha-lcov-reporter": "0.0.1",
    "mochify": "^1.1.3",
    "standard": "*"
  },
  "repository": {
    "url": "https://github.com/cryptocoinjs/coinkey",
    "type": "git"
  },
  "main": "./lib/coinkey.js",
  "dependencies": {
    "coinstring": "^2.0.0",
    "eckey": "^0.8.0",
    "inherits": "^2.0.1",
    "secure-random": "^1.0.0"
  },
  "scripts": {
    "browser-test": "mochify --wd -R spec",
    "test": "standard && mocha",
    "unit": "./node_modules/.bin/mocha",
    "coverage": "./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",
    "coveralls": "npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info"
  },
  "readme": "coinkey\n=======\n\n[![build status](https://secure.travis-ci.org/cryptocoinjs/coinkey.png)](http://travis-ci.org/cryptocoinjs/coinkey)\n[![Coverage Status](https://img.shields.io/coveralls/cryptocoinjs/coinkey.svg)](https://coveralls.io/r/cryptocoinjs/coinkey)\n[![Version](http://img.shields.io/npm/v/coinkey.svg)](https://www.npmjs.org/package/coinkey)\n\n\nJavaScript component for private keys, public keys, and addresess for crypto currencies such as Bitcoin, Litecoin, and Dogecoin. Works\nin both Node.js and the browser.\n\n**Official documentation:**\n\nhttp://cryptocoinjs.com/modules/currency/coinkey/\n\n\nPackage Info\n------------\n- github: [https://github.com/cryptocoinjs/coinkey](https://github.com/cryptocoinjs/coinkey)\n- tests: [https://github.com/cryptocoinjs/coinkey/tree/master/test](https://github.com/cryptocoinjs/coinkey/tree/master/test)\n- issues: [https://github.com/cryptocoinjs/coinkey/issues](https://github.com/cryptocoinjs/coinkey/issues)\n- license: **MIT**\n- versioning: [http://semver-ftw.org](http://semver-ftw.org)\n\n\nInstallation\n------------\n\n    npm i --save coinkey\n\n\nUsage\n-----\n\n### Common Use Cases\n\n### Generate a Bunch of Bitcoin Keys/Addresses\n\n```js\nvar CoinKey = require('coinkey')\n\nvar bitcoinKeys = []\nfor (var i = 0; i < 10; ++i) {\n  // bitcoin supported by default\n  bitcoinKeys.push(CoinKey.createRandom())\n}\n```\n\n\n#### Generate a Bunch of Namecoin Keys/Addresses\n\n```js\nvar CoinKey = require('coinkey')\n// npm install --save coininfo\nvar ci = require('coininfo')\n\nvar namecoins = []\nfor (var i = 0; i < 10; ++i) {\n  namecoins.push(CoinKey.createRandom(ci('NMC')))\n}\n```\n\n\n#### Parse a Wallet Import Key and Determine Crypto Currency\n\n```js\nvar CoinKey = require('coinkey')\nvar ci = require('coininfo')\n\nvar ck = CoinKey.fromWif('QVD3x1RPiWPvyxbTsfxVwaYLyeBZrQvjhZ2aZJUsbuRgsEAGpNQ2')\n\nconsole.log(ck.privateKey.toString('hex')) // => c4bbcb1fbec99d65bf59d85c8cb62ee2db963f0fe106f483d9afa73bd4e39a8a\nconsole.log(ck.publicAddress) // => DGG6AicS4Qg8Y3UFtcuwJqbuRZ3Q7WtYXv\nconsole.log(ck.compressed) // => true\nconsole.log(ck.versions.public === ci('DOGE').versions.public) // => true\n```\n\n\n#### Change to Testnet Later\n\n```js\nvar CoinKey = require('coinkey')\nvar ci = require('coininfo')\n\nvar ck = new CoinKey(new Buffer('1184cd2cdd640ca42cfc3a091c51d549b2f016d454b2774019c2b2d2e08529fd', 'hex'))\nconsole.log(ck.publicAddress) // => 16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\n\n//change to Testnet\nck.versions = ci('BTC-TEST')\n\nconsole.log(ck.publicAddress) // => mkzgubTA5Ahi6BPSkE6MN9pEafRutznkMe\n```\n\n\n### API\n\n#### CoinKey(privateKey, [versions])\n\nConstructor function.\n\n- **privateKey**: The private key bytes. Must be 32 bytes in length. Should be an `Array`, `Uint8Array`, or a `Buffer`.\n- **versions**: An object that specifies the public and private key versions for addresses and wifs. Defaults to Bitcoin `mainnet`.\n\nKeys are default set to `compressed` is `true`.\n\n```js\nvar CoinKey = require('coinkey')\n//npm install --save secure-random@1.x\nvar secureRandom = require('secure-random')\n\nvar bytes = secureRandom.randomBuffer(32)\nvar key1 = new CoinKey(bytes)\nconsole.log(key1.compressed) // => true\n```\n\n\n### Properties\n\n\n#### compressed\n\nInherited from [ECKey][eckey]. [eckey.compressed](http://cryptocoinjs.com/modules/currency/eckey/#compressed)\n\n\n#### privateKey\n\nInherited from [ECKey][eckey]. [eckey.privateKey](http://cryptocoinjs.com/modules/currency/eckey/#privatekey)\n\n\n#### privateExportKey\n\nInherited from [ECKey][eckey]. [eckey.privateExportKey](http://cryptocoinjs.com/modules/currency/eckey/#privateexportkey)\n\n\n#### privateWif\n\nGet the private WIF (Wallet Import Format).\n\n```js\nvar CoinKey = require('coinkey')\n\nvar privateKeyHex = \"1184cd2cdd640ca42cfc3a091c51d549b2f016d454b2774019c2b2d2e08529fd\"\n\n//Bitcoin WIF\nvar key = new CoinKey(new Buffer(privateKeyHex, 'hex'))\nkey.compressed = false\nconsole.log(key.privateWif) // => 5Hx15HFGyep2CfPxsJKe2fXJsCVn5DEiyoeGGF6JZjGbTRnqfiD\n\n//Litecoin WIF\nvar key = new CoinKey(new Buffer(privateKeyHex, 'hex'), {private: 0xB0, public: 0x30})\nkey.compressed = false\nconsole.log(key.privateWif) // => 6uFjYQnot5Gtg3HpP87bp4JUpg4FH1gkkV3RyS7LHBbD9Hpt1na\n```\n\n\n#### publicKey\n\nInherited from [ECKey][eckey]. [eckey.publicKey](http://cryptocoinjs.com/modules/currency/eckey/#publickey)\n\n\n#### publicAddress\n\nGet the public address.\n\n```js\nvar CoinKey = require('coinkey')\n\nvar privateKeyHex = \"1184cd2cdd640ca42cfc3a091c51d549b2f016d454b2774019c2b2d2e08529fd\"\n\n// Bitcoin Address\nvar key = new CoinKey(new Buffer(privatKeyHex, 'hex'))\nconsole.log(key.publicAddress) // => 16UjcYNBG9GTK4uq2f7yYEbuifqCzoLMGS\n\n// Litecoin Address\nvar key = new CoinKey(new Buffer(privateKeyHex, 'hex'), {private: 0xB0, public: 0x30})\nconsole.log(key.publicAddress) // => 'LZyGd5dCPVkVUjA5QbpuUfMNgcmNDLjswH'\n```\n\n\n#### publicHash\n\nAlias: `pubKeyHash`\n\nInherited from [ECKey][eckey]. [eckey.publicHash](http://cryptocoinjs.com/modules/currency/eckey/#publicHash)\n\n\n#### publicPoint\n\nInherited from [ECKey][eckey]. [eckey.publicPoint](http://cryptocoinjs.com/modules/currency/eckey/#publicPoint)\n\n\n#### toString()\n\nReturns the string representation.\n\n```js\nvar CoinKey = require('coinkey')\n\nvar privateKeyHex = \"1184cd2cdd640ca42cfc3a091c51d549b2f016d454b2774019c2b2d2e08529fd\"\n\n//Litecoin Address\nvar key = new CoinKey(new Buffer(privateKeyHex, 'hex'), {private: 0xB0, public: 0x30})\nconsole.log(key.toString())\n// => T3e2me1BvRs95K7E8eQ8eha9oRPL1g2U6vmjE5px6RjzbUTvKZsf: LZyGd5dCPVkVUjA5QbpuUfMNgcmNDLjswH\n```\n\n\n### Methods\n\n#### fromWif(wif, [versions])\n\nClass method to create a `CoinKey` from a wif.\n\n```js\nvar ck = CoinKey.fromWif('KwomKti1X3tYJUUMb1TGSM2mrZk1wb1aHisUNHCQXTZq5auC2qc3');\nconsole.log(ck.compressed) // => true\nconsole.log(ck.privateKey.toString('hex')) // => 1184cd2cdd640ca42cfc3a091c51d549b2f016d454b2774019c2b2d2e08529fd\nconsole.log(ck.publicAddress) // => 1FkKMsKNJqWSDvTvETqcCeHcUQQ64kSC6s\n```\n\n\nBrowser Support\n---------------\n\nClone the repo:\n\n    git clone https://github.com/cryptocoinjs/coinkey\n\nInstall Browserify\n\n    npm install -g browserify\n\nNav to repo:\n\n    cd coinkey\n\nInstall dependencies:\n\n    npm install\n\nRun browserify:\n\n    browserify --standalone coinkey lib/coinkey.js > lib/coinkey.bundle.js\n\nYou can now drop `coinkey.bundle.js` in a `<script>` tag.\n\n\n[eckey]: https://github.com/cryptocoinjs/eckey\n[coinstring]: https://github.com/cryptocoinjs/coinstring\n\n\nHack on CoinKey\n---------------\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/coinkey/issues"
  },
  "_id": "coinkey@1.4.0",
  "dist": {
    "shasum": "0c7eb6d9511320c125577510e42d639f99b11c8f"
  },
  "_from": "coinkey@^1.4.0",
  "_resolved": "https://registry.npmjs.org/coinkey/-/coinkey-1.4.0.tgz"
}
